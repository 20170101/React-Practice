在React应用中，对应任何可变数据理应只有一个单一“数据源”。通常，状态都是首先添加在需要渲
染数据的组件中。此时，如果另一个组件也需要这些数据，你可以将数据提升至离它们最近的父组件
中。你应该在应用中保持 自上而下的数据流，而不是尝试在不同组件中同步状态。

状态提升比双向绑定方式要写更多的“模版代码”，但带来的好处是，你也可以更快地寻找和定位bug的工作。
因为哪个组件保有状态数据，也只有它自己能够操作这些数据，发生bug的范围就被大大地减小了。此外，
你也可以使用自定义逻辑来拒绝或者更改用户的输入。

当你在开发UI界面遇到问题时，你可以使用 React 开发者工具(https://github.com/facebook/react-devtools)
来检查props属性，并且可以点击查看组件树，直到你找到负责目前状态更新的组件。这能让你到追踪到产生 bug 的源头。